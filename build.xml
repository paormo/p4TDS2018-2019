<project name="practica3" default="compilar" basedir=".">
	<description>
		Fichero build de Ant con los objetivos definidos en el enunciado de la practica
	</description>

	<!-- Properties -->
	<property name="jacocoagent" location="target/coverage/jacoco.exec" />
	<property environment="env" />

	<!-- Condiciones para el tratamiento de OS -->
	<condition property="isWindows">
		<os family="windows" />
	</condition>
	<condition property="isUnix">
		<os family="unix" />
	</condition>

	<!-- Condicion para comprobar la existencia del agente -->
	<condition property="jacoco-agent-present">
		<available file="${jacocoagent}" />
	</condition>

	<!-- Objetivos -->

	<!-- Objetivo compilar -->
	<target name="compilar" description="obtiene dependencias y compila" depends="limpiar, compilar_win, compilar_unix" />
	<target name="compilar_win" description="compilar windows" if="isWindows">
		<exec dir="." executable="cmd">
			<arg line="/c mvn compile test-compile" />
		</exec>
	</target>
	<target name="compilar_unix" description="compilar unix" if="isUnix">
		<exec dir="." executable="sh">
			<arg line="-c 'mvn compile test-compile'" />
		</exec>
	</target>

	<!-- Objetivo ejecutarTodoSinAislamiento -->
	<target name="ejecutarTodoSinAislamiento" description="pruebas TDD, caja negra y caja blanca" depends="ejecutarTestsTDDyCajaNegra,ejecutarPruebasSecuencia,ejecutaCajaBlanca"/>
	
	<!-- Objetivo ejecutarTestsTDDyCajaNegra -->
	<target name="ejecutarTestsTDDyCajaNegra" description="pruebas TDD y de caja negra" depends="ejecutarTestsTDDyCajaNegra_win, ejecutarTestsTDDyCajaNegra_unix" />
	<target name="ejecutarTestsTDDyCajaNegra_win" description="ejecutarTestsTDDyCajaNegra windows" if="isWindows">
		<exec dir="." executable="cmd">
			<arg line="/c mvn test -P Unit" />
		</exec>
	</target>
	<target name="ejecutarTestsTDDyCajaNegra_unix" description="ejecutarTestsTDDyCajaNegra unix" if="isUnix">
		<exec dir="." executable="sh">
			<arg line="-c 'mvn test -P Unit'" />
		</exec>
	</target>
	<!-- Objetivo ejecutarPruebasSecuencia -->
	<target name="ejecutarPruebasSecuencia" description="pruebas de secuencia del proyecto" depends="ejecutarPruebasSecuencia_win, ejecutarPruebasSecuencia_unix" />
		<target name="ejecutarPruebasSecuencia_win" description="lanzar pruebas si estamos en windows" if="isWindows">
			<exec dir="." executable="cmd">
				<arg line="/c mvn test -P Sequence" />
			</exec>
		</target>
		<target name="ejecutarPruebasSecuencia_unix" description="lanzar pruebas si estamos en unix" if="isUnix">
			<exec dir="." executable="sh">
				<arg line="-c 'mvn test -P Sequence'" />
			</exec>
		</target>
	<!--Objetivo ejecutarCajaBlanca-->
	<target name="ejecutaCajaBlanca" description="lanza las pruebas de caja blanca del proyecto" depends="ejecutaCajaBlanca_win, ejecutaCajaBlanca_unix" />
			<target name="ejecutaCajaBlanca_win" description="lanza las pruebas de caja blanca si estamos en windows" if="isWindows">
				<exec dir="." executable="cmd">
					<arg line="/c mvn test -P WhiteBox" />
				</exec>
			</target>
			<target name="ejecutaCajaBlanca_unix" description="lanza las pruebas de caja blanca si estamos en unix" if="isUnix">
				<exec dir="." executable="sh">
					<arg line="-c 'mvn test -P WhiteBox'" />
				</exec>
			</target>
	
	<!-- Objetivo ejecutarTestEnAislamiento -->
	<target name="ejecutarTodoTestEnAislamiento" description="pruebas con mock objects de la practica" depends="ejecutarTestEnAislamiento_win, ejecutarTestEnAislamiento_unix" />
	<target name="ejecutarTestEnAislamiento_win" description="ejecutarTestEnAislamiento windows" if="isWindows">
		<exec dir="." executable="cmd">
			<arg line="/c mvn test -P Isolation" />
		</exec>
	</target>
	<target name="ejecutarTestEnAislamiento_unix" description="ejecutarTestEnAislamiento unix" if="isUnix">
		<exec dir="." executable="sh">
			<arg line="-c 'mvn test -P Isolation'" />
		</exec>
	</target>
	
	
	<!-- Objetivo obtenerInformeCobertura -->
	<target name="obtenerInformeCobertura" description="obtener informes de cobertura con jacoco y sonarqube" depends="compilar, obtenerInformeCobertura_win, obtenerInformeCobertura_unix" />
	<target name="obtenerInformeCobertura_win" description="obtenerInformeCobertura Windows" if="isWindows" depends="prepara-jacoco_win">
		<exec dir="." executable="cmd">
			<arg line="/c mvn compile" />
		</exec>
		<exec dir="." executable="cmd">
			<arg line="/c mvn -X -Djacoco.dataFile=${jacocoagent} -Djacoco.outputDirectory=./jacoco_ut org.jacoco:jacoco-maven-plugin:report" />
		</exec>
	</target>
	<target name="prepara-jacoco_win" if="isWindows" unless="jacoco-agent-present">
		<exec dir="." executable="cmd">
			<arg line="/c mvn -Djacoco.destFile=${jacocoagent} clean org.jacoco:jacoco-maven-plugin:0.7.8:prepare-agent install" />
		</exec>
	</target>
	<target name="obtenerInformeCobertura_unix" description="obtenerInformeCobertura Unix" if="isUnix" depends="prepara-jacoco_unix">
		<exec dir="." executable="sh">
			<arg line="-c 'mvn compile test-compile'" />
		</exec>
		<exec dir="." executable="sh">
			<arg line="-c 'mvn -X -Djacoco.dataFile=${jacocoagent} -Djacoco.outputDirectory=./jacoco_ut org.jacoco:jacoco-maven-plugin:report'" />
		</exec>
	</target>
	<target name="prepara-jacoco_unix" if="isUnix" unless="jacoco-agent-present">
		<exec dir="." executable="sh">
			<arg line="-c 'mvn -Djacoco.destFile=${jacocoagent} clean org.jacoco:jacoco-maven-plugin:0.7.8:prepare-agent install'" />
		</exec>
	</target>

	<!-- Objetivo analisis de calidad de codigo -->
	<target name="calidad" description="obtener informe sobre calidad de codigo en sonarqube" depends="obtenerInformeCobertura, calidad_win, calidad_unix" />
	<target name="calidad_win" description="medidas Windows" if="isWindows">
		<exec dir="." executable="cmd">
			<arg line="/c mvn jxr:jxr pmd:pmd " />
		</exec>
	</target>
	<target name="calidad_unix" description="medidas Unix" if="isUnix">
		<exec dir="." executable="sh">
			<arg line="-c 'mvn -P Unit jxr:jxr pmd:pmd sonar:sonar -Dsonar.host.url=https://sonarqube.inf.uva.es/ -Dsonar.login=${env.SONAR_USER_TOKEN} -Dsonar.analysis.mode=publish -Dsonar.issuesReport.console.enable=true -Dsonar.jacoco.reportPath=target/coverage/jacoco.exec -Dsonar.junit.reportPaths=target/surefire-reports'" />
		</exec>
	</target>

	<!-- Objetivo documentar -->
	<target name="documentar" description="genera el site de la documentaciÃ³n del proyecto" depends="documentar_win, documentar_unix" />
	<target name="documentar_win" description="documentar en Windows" if="isWindows">
		<exec dir="." executable="cmd">
			<arg line="/c mvn site" />
		</exec>
	</target>
	<target name="documentar_unix" description="documentar en Unix" if="isUnix">
		<exec dir="." executable="sh">
			<arg line="-c 'mvn site'" />
		</exec>
	</target>

	<!-- Objetivo limpiar -->
	<target name="limpiar" description="Elimina archivos innecesarios" depends="limpiar_unix, limpiar_win" />
	<target name="limpiar_win" description="limpiar en Windows" if="isWindows">
		<exec dir="." executable="cmd">
			<arg line="/c mvn clean" />
		</exec>
	</target>
	<target name="limpiar_unix" description="limpiar en Unix" if="isUnix">
		<exec dir="." executable="sh">
			<arg line="-c 'mvn clean'" />
		</exec>
	</target>
</project>

